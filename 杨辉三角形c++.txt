#include <iostream>
#include <iomanip> // 用于格式化输出

using namespace std;

// 函数：生成并打印杨辉三角形
void printPascalTriangle(int n) {
    // 分配二维数组
    int** arr = new int*[n];
    for (int i = 0; i < n; ++i) {
        arr[i] = new int[i+1];
    }

    // 填充杨辉三角形
    for (int line = 0; line < n; line++) {
        // 每行的数字个数等于行号+1
        for (int i = 0; i <= line; i++) {
            // 第一列和最后一列总是1
            if (i == 0 || i == line) {
                arr[line][i] = 1;
            } else {
                // 其他位置的值等于上一行的左上方和正上方之和
                arr[line][i] = arr[line-1][i-1] + arr[line-1][i];
            }
        }
    }
  
    for (int line = 0; line < n; line++) {
        // 打印前导空格，使三角形居中
        cout << setw((n - line) * 2);        
        for (int i = 0; i <= line; i++) {
            cout <<" "<< arr[line][i];
        }
        cout << endl;
    }
    // 释放内存
    for (int i = 0; i < n; ++i) {
        delete[] arr[i];
    }
    delete[] arr;
}

int main() {
    int rows;
    cin >> rows;
    if (cin.fail() || rows <= 0) {
        cout << "无效输入，请输入一个正整数。" << endl;
        return 1;
    }    
    printPascalTriangle(rows);  
    return 0;
}